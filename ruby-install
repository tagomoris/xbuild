#!/bin/bash

while getopts fh OPT
do
    case $OPT in
        "f") FLAG_FORCE="TRUE" ;;
        "h") FLAG_HELP="TRUE" ;;
        * ) FLAG_HELP="TRUE" ;;
    esac
done
shift `expr $OPTIND - 1`

TARGET_VERSION="$1"
LOCATION="$2"

if [ "x"$FLAG_HELP != "x" -o "x$LOCATION" = "x" ]; then
    echo "[usage] ruby-install [-f] VERSION LOCATION"
    echo "  ex: ruby-install 2.1.1 ~/local/ruby-2.1"
    exit 0
fi

cd $(dirname $0)
XBUILD_PATH=$(pwd)

mkdir -p var
oldcheck=$(find var -name "ruby-build.date" -mtime -1)
if [ ! -f ./var/ruby-build.date -o "x"$oldcheck = "x" ]; then
    (
        echo "cloning latest ruby-build."
        set -e
        cd var
        [ -d ./ruby-build ] && rm -rf ruby-build-repo ruby-build ruby-build.date
        git clone -q git://github.com/sstephenson/ruby-build.git ruby-build-repo
        touch ruby-build.date
        cd ruby-build-repo
        PREFIX="$XBUILD_PATH"/var/ruby-build ./install.sh >/dev/null 2>&1
    )
    if [ 0 != "$?" ]; then echo "failed to download ruby-build"; exit 1; fi
fi
rm -f ./var/.24hours

if [ "x"$FLAG_FORCE = "x" -a -d "$LOCATION" -a -x "$LOCATION/bin/ruby" ]; then
    miss=""
    current_ver=$("$LOCATION"/bin/ruby -v)
    for p in $(echo "$TARGET_VERSION" | sed -e 's/\./\\\./g;s/-/ /g');
    do
        hit=$(echo "$current_ver" | grep "$p")
        if [ "x$hit" = "x" ]; then
            miss="1"$miss
        fi
    done        
    if [ "x$miss" = "x" ]; then
        echo "ruby $TARGET_VERSION already installed on $LOCATION"
        echo "To do force re-install, use '-f' option"
        exit 0
    fi
fi

echo "Start to build ruby $TARGET_VERSION ..."
./var/ruby-build/bin/ruby-build "$TARGET_VERSION" "$LOCATION" > /tmp/$USER-ruby-install.log 2>&1
RETVAL=$?
if [ $RETVAL != 0 ]; then
    echo "ruby-build failed. see log: /tmp/$USER-ruby-install.log"
    exit 1
fi

(
    export PATH="$LOCATION"/bin:"$PATH"
    gems="pry"
    if [ ! -x "$LOCATION"/bin/bundle ]; then
        gems="bundler $gems"
    fi
    "$LOCATION"/bin/gem install --no-rdoc --no-ri $gems > /tmp/$USER-ruby-install-bundler.log 2>&1
)
if [ 0 != "$?" ]; then echo "gem install failed. see log /tmp/$USER-ruby-install-bundler.log"; exit 2; fi

echo "ruby $TARGET_VERSION successfully installed on $LOCATION"
echo "To use this ruby, do 'export PATH=$LOCATION/bin:\$PATH'."
